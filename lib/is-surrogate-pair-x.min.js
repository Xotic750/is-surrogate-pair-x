!function(t){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var e;e="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,e.returnExports=t()}}(function(){return function e(t,r,n){function s(i,f){if(!r[i]){if(!t[i]){var u="function"==typeof require&&require;if(!f&&u)return u(i,!0);if(o)return o(i,!0);var c=new Error("Cannot find module '"+i+"'");throw c.code="MODULE_NOT_FOUND",c}var p=r[i]={exports:{}};t[i][0].call(p.exports,function(e){var r=t[i][1][e];return s(r||e)},p,p.exports,e,t,r,n)}return r[i].exports}for(var o="function"==typeof require&&require,i=0;i<n.length;i++)s(n[i]);return s}({1:[function(t,e,r){!function(){"use strict";var r=t("is-string");e.exports=function isSurrogatePair(t,e){if(r(t)&&1===t.length&&r(e)&&1===e.length){var n=t.charCodeAt();if(n>=55296&&n<=56319){var o=e.charCodeAt();if(o>=56320&&o<=57343)return!0}}return!1}}()},{"is-string":2}],2:[function(t,e,r){"use strict";var n=String.prototype.valueOf,o=function tryStringObject(t){try{return n.call(t),!0}catch(t){return!1}},i=Object.prototype.toString,f="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;e.exports=function isString(t){return"string"==typeof t||"object"==typeof t&&(f?o(t):"[object String]"===i.call(t))}},{}]},{},[1])(1)});
//# sourceMappingURL=lib/is-surrogate-pair-x.map